[fortran, fortran_openacc]

    integer :: k,ll

    !$acc parallel loop collapse(2) present(state) async
    do ll = 1 , NUM_VARS
        do k = 1 , nz
          state(-1  ,k,ll) = state(nx-1,k,ll)
          state(0   ,k,ll) = state(nx  ,k,ll)
          state(nx+1,k,ll) = state(1   ,k,ll)
          state(nx+2,k,ll) = state(2   ,k,ll)
        enddo
    enddo

[hip]
 
    int k = blockIdx.x;
    int ll = blockIdx.y;

    state[ll][k+HS][0] = state[ll][k+HS][NX+HS-2];
    state[ll][k+HS][1] = state[ll][k+HS][NX+HS-1];
    state[ll][k+HS][NX+2*HS-2] = state[ll][k+HS][2];
    state[ll][k+HS][NX+2*HS-1] = state[ll][k+HS][3];

