[fortran, fortran_openacc]

    integer :: i,k,ll

    do ll = 1 , NUM_VARS
      do k = 1 , nz
        do i = 1 , nx
          tend(i,k,ll) = -( flux(i+1,k,ll) - flux(i,k,ll) ) / dx
        enddo
      enddo
    enddo

[hip]

    int ll = blockIdx.x; //Vars
    int k = blockIdx.y; //Z
    int i = blockIdx.z; //X

    if (k==0 && i==0 && ll==0) {
      double ss = 0.0;
      for (int x1=0; x1<NUM_VARS; x1++) {
      for (int x2=0; x2<NZ+1; x2++) {
      for (int x3=0; x3<NX+1; x3++) {
         ss = ss + flux[x1][x2][x3];
      }
      }
      }
      printf("DFDFDFDFDDFDFD sum=%20.16f\n", ss);
	}
    tend[ll][k][i] = -( flux[ll][k][i+1] - flux[ll][k][i] ) / DX;
